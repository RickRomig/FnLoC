#!/bin/bash
#####################################################################
# Script Name  : loc2file
# Description  : Wrapper for fnloco/lloc. Redirects program output to
#              : a file and stdout
# Dependencies : fnloc, lloc, tee
# Arguments    :
# Author       : Richard Romig, 26 January 2019
# Email        : rick.romig@gmail.com
# Comment      : Modified 01/26/10 to incorporate lloc and allow
#              : .cc and .hh file extensions.
#####################################################################

# Copyright (C) 2018-2019  Richard Romig
# Email: rick.romig@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.

MYSCRIPT=$(basename $0)

usage () {
	echo "Usage: $MYSCRIPT sourcefile.c"
	echo "Acceptable extensions are: .c .cpp .cc"
	exit 1
}

# Check for arguments
if  [ -z "$1" ]; then
	echo "Error: No argument provided."
	usage
else
	CSOURCE=$1
fi

# Test if file passed exists. If not, exit with error.
if [ ! -f "$CSOURCE" ]; then
	echo "Error: $CSOURCE not found."
	usage
fi

# Get file extension and check to see if it's valid. If not, exit with error.
EXT="${CSOURCE##*.}"
if [ "$EXT" != 'c' ] && [ "$EXT" != "cpp" ] && [ "$EXT" != "cc" ]; then
	echo "Error: Invalid file extension."
	usage
fi

# Get base filename and create filename for LOC data
BASEFILE=${CSOURCE%%.*}
LOCFILE="$BASEFILE.loc"

echo "$MYSCRIPT 2.2"
echo "Copyright 2018-2019, Richard B. Romig"
echo "====================================="
echo "Writing LOC data to $LOCFILE..."

# Process the source file with fnloc
fnloc $CSOURCE | tee $LOCFILE

# Process matching header file if it exists
if [ -e "$BASEFILE.h" ]; then
	lloc $BASEFILE.h | tee -a $LOCFILE
elif [ -e "$BASEFILE.hh" ]; then
	lloc $BASEFILE.hh | tee -a $LOCFILE
fi

echo "Logical lines of code data written to $LOCFILE."

exit 0
