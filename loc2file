#!/bin/bash
#####################################################################
# Script Name  : loc2file
# Description  : Wrapper for fnloco/lloc. LOC data to stdout as it
#              : redirects it to a file.
# Dependencies : fnloc, lloc, tee
# Arguments    :
# Author       : Richard Romig, 26 January 2019
# Email        : rick.romig@gmail.com
# Comment      : Modified 01/26/19 to incorporate lloc and allow
#              : .cc and .hh file extensions.
#              : Modified 03/31/20 to improve checks for arguments and
#              : processing of header files.
# TODO (rick)  :
#####################################################################

# Copyright (C) 2018-2019  Richard Romig
# Email: rick.romig@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.

declare -r VERSION="2.3.0"
declare -r COPYRIGHT="Copyright 2018-2020"
declare -r AUTHOR="Richard B. Romig"
MYSCRIPT=$(basename "$0")

usage()
{
  echo "Usage: $MYSCRIPT sourcefile.c"
  echo "Acceptable extensions are: .c .cpp .cc"
  exit 1
}

process_code()
{
  # Process the source file with fnloc
  fnloc "$CSOURCE" | tee "$LOCFILE"

  # Process matching header file if it exists
  [ -e "$BASEFILE.h" ] && lloc "$BASEFILE.h" | tee -a "$LOCFILE"
  [ -e "$BASEFILE.hh" ] && lloc "$BASEFILE.hh" | tee -a "$LOCFILE"

  echo "Logical lines of code data written to $LOCFILE."
  exit
}

# Check for arguments
if [ -z "$1" ]; then
  echo -e "\e[1;31mError:\e[0m No argument provided." >&2
  usage
elif [ ! -f "$1" ]; then
  echo -e "\e[1;31mError:\e[0m $1 not found." >&2
  usage
else
  CSOURCE=$1
fi

# Get base filename and create filename for LOC data
BASEFILE=${CSOURCE%%.*}
LOCFILE="$BASEFILE.loc"
EXT="${CSOURCE##*.}"

echo "$MYSCRIPT $VERSION"
echo "$COPYRIGHT, $AUTHOR"
echo "====================================="
echo "Writing LOC data to $LOCFILE..."
case $EXT in
  c|cc|cpp ) process_code ;;
  * ) echo -e "\e[1;31mError:\e[0m Invalid file extension." >&2; usage ;;
esac
